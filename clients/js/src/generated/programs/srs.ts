/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  getU8Encoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/kit';
import { type ParsedCreateClassInstruction } from '../instructions';

export const SRS_PROGRAM_ADDRESS =
  'srsUi2TVUUCyGcZdopxJauk8ZBzgAaHHZCVUhm5ifPaC' as Address<'srsUi2TVUUCyGcZdopxJauk8ZBzgAaHHZCVUhm5ifPaC'>;

export enum SrsAccount {
  Class,
}

export function identifySrsAccount(
  account: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): SrsAccount {
  const data = 'data' in account ? account.data : account;
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return SrsAccount.Class;
  }
  throw new Error(
    'The provided account could not be identified as a srs account.'
  );
}

export enum SrsInstruction {
  CreateClass,
}

export function identifySrsInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): SrsInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return SrsInstruction.CreateClass;
  }
  throw new Error(
    'The provided instruction could not be identified as a srs instruction.'
  );
}

export type ParsedSrsInstruction<
  TProgram extends string = 'srsUi2TVUUCyGcZdopxJauk8ZBzgAaHHZCVUhm5ifPaC',
> = {
  instructionType: SrsInstruction.CreateClass;
} & ParsedCreateClassInstruction<TProgram>;
