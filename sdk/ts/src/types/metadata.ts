/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import { Option } from '@metaplex-foundation/umi';
import {
  Serializer,
  array,
  mapSerializer,
  option,
  string,
  struct,
} from '@metaplex-foundation/umi/serializers';

/** Token22 Metadata Extension compatible Metadata format */
export type Metadata = {
  name: string;
  symbol: string;
  uri: string;
  additionalMetadata: Option<Array<{ label: string; value: string }>>;
};

export type MetadataArgs = { name: string; symbol?: string; uri: string };

export function getMetadataSerializer(): Serializer<MetadataArgs, Metadata> {
  return mapSerializer<MetadataArgs, any, Metadata>(
    struct<Metadata>(
      [
        ['name', string()],
        ['symbol', string()],
        ['uri', string()],
        [
          'additionalMetadata',
          option(
            array(
              struct<any>([
                ['label', string()],
                ['value', string()],
              ])
            )
          ),
        ],
      ],
      { description: 'Metadata' }
    ),
    (value) => ({
      ...value,
      symbol: value.symbol ?? 'SRS',
      additionalMetadata: 0,
    })
  ) as Serializer<MetadataArgs, Metadata>;
}
